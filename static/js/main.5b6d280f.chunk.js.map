{"version":3,"sources":["reducers/index.js","components/SongItem.js","components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","index.js"],"names":["combineReducers","selectedSong","action","type","payload","songList","title","duration","SongItem","song","selectClicked","className","onClick","SongList","console","log","props","selectSong","this","songs","map","React","Component","connect","state","Fragment","style","fontSize","display","App","marginTop","SongDetail","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"iNAsBeA,cAAgB,CAC3BC,aAVwB,WAA6B,IAA5BA,EAA2B,uDAAd,KAAKC,EAAS,uCACpD,MAAiB,gBAAdA,EAAOC,KAECD,EAAOE,QAEXH,GAMPI,SArBiB,WACjB,MAAO,CACH,CAAEC,MAAO,yBAA0BC,SAAU,QAC7C,CAAED,MAAO,sBAAuBC,SAAU,QAC1C,CAAED,MAAO,YAAaC,SAAU,QAChC,CAAED,MAAO,yBAA0BC,SAAU,Y,4BCStCC,EAdE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAKC,EAAmB,EAAnBA,cACrB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,qBAAKA,UAAU,YAAYC,QAAS,kBAAIF,EAAcD,IAAtD,sBAGJ,qBAAKE,UAAU,UAAf,SACKF,EAAKH,YCPhBO,E,4MAGDH,cAAgB,SAACD,GACbK,QAAQC,IAAIN,GACZ,EAAKO,MAAMC,WAAWR,I,uDAEjB,IAAD,OAEL,OACA,qBAAKE,UAAU,iCAAf,SACCO,KAAKF,MAAMG,MAAMC,KAAI,SAAAX,GAClB,OAAO,cAAC,EAAD,CAAUA,KAAMA,EAAuBC,cAAe,EAAKA,eAAhCD,EAAKH,gB,GAZ5Be,IAAMC,WA0BdC,eAJS,SAACC,GAErB,MAAO,CAACL,MAAMK,EAAMnB,YAEe,CACnCY,WC/BsB,SAACR,GAEvB,MAAO,CACHN,KAAK,cACLC,QAAQK,KD0BDc,CAEZV,GE5BGL,E,uKAGE,OAAIU,KAAKF,MAAMP,KAIX,eAAC,IAAMgB,SAAP,WACA,sBAAKC,MAAO,CAACC,SAAS,OAAOC,QAAQ,SAArC,oBACYV,KAAKF,MAAMP,KAAKH,SAG5B,6CAAgBY,KAAKF,MAAMP,KAAKF,eAR7B,uD,GAJQc,IAAMC,WAsBdC,eAJS,SAACC,GACrB,MAAO,CAACf,KAAKe,EAAMvB,gBAGRsB,CAAyBf,GCDzBqB,EAlBH,WAEV,OACE,qBAAKlB,UAAU,eAAee,MAAO,CAACI,UAAU,QAAhD,SACE,sBAAKnB,UAAU,UAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,oBAAf,SACI,cAACoB,EAAD,YCJZC,IAASC,OAAO,cAAC,IAAD,CAAUC,MAAOC,YAAYC,GAA7B,SAAwC,cAAC,EAAD,MAAkBC,SAASC,cAAc,Y","file":"static/js/main.5b6d280f.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\n\n\nconst songsReducer = () => {\n    return [\n        { title: 'Chale Chaiyya Chaiyya ', duration: \"4:05\" },\n        { title: 'Zindagi Gulzar hai ', duration: \"5:45\" },\n        { title: 'Playdate ', duration: \"3:14\" },\n        { title: 'Strength of Thousands ', duration: \"2:15\" }\n\n    ];\n}\n\nconst selectedSongReducer = (selectedSong=null,action)=>{\n    if(action.type===\"SELECT_SONG\")\n    {\n        return action.payload;\n    }\n    return selectedSong;\n\n}\n\nexport default combineReducers({\n    selectedSong:selectedSongReducer,\n    songList:songsReducer\n});","import React from 'react';\n\n\nconst SongItem = ({ song,selectClicked}) => {\n    return (\n        <div className=\"item\">\n            <div className=\"right floated content\">\n                <div className=\"ui button\" onClick={()=>selectClicked(song)}>Select</div>\n            </div>\n\n            <div className=\"content\">\n                {song.title}\n            </div>\n        </div>\n    );\n}\n\nexport default SongItem;","import React from 'react';\nimport { connect } from 'react-redux';\nimport SongItem from './SongItem';\nimport {selectSong} from '../actions';\nclass SongList extends React.Component {\n\n\n     selectClicked = (song)=>{\n         console.log(song);\n         this.props.selectSong(song);\n     }\n    render() {\n        //console.log(this.props);\n        return (\n        <div className=\"ui middle aligned divided list\">\n        {this.props.songs.map(song=>{\n            return <SongItem song={song} key={song.title} selectClicked={this.selectClicked}/>\n        })}      \n\n        </div>\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return {songs:state.songList};\n}\nexport default connect(mapStateToProps,{\n    selectSong\n})(SongList);","export const selectSong = (song)=>{\n\n    return({\n        type:\"SELECT_SONG\",\n        payload:song\n\n    })\n\n}","import React from \"react\";\nimport {connect} from 'react-redux';\n\n\nclass SongItem extends React.Component{\n\n    render(){\n        if(!this.props.song)\n        return <div>No Song Selected</div>\n\n        return(\n            <React.Fragment>\n            <div style={{fontSize:\"30px\",display:\"block\"}}>\n                Name : {this.props.song.title} \n                \n            </div>\n            <div>Duration: {this.props.song.duration}</div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {song:state.selectedSong}\n}\n\nexport default connect(mapStateToProps)(SongItem);\n\n\n","import React from 'react';\n\n\n\nimport SongList from './SongList';\nimport SongDetail from './SongDetail';\n\nconst App = () => {\n\n  return (\n    <div className=\"ui container\" style={{marginTop:\"10px\"}}>\n      <div className=\"ui grid\">\n        <div className=\"eight wide column\">\n          <SongList />\n        </div>\n        <div className=\"eight wide column\"> \n            <SongDetail/>\n        </div>\n      </div>\n\n    </div>\n  );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\n\nimport reducers from './reducers';\n\n\n\nimport App from './components/App';\n\nReactDOM.render(<Provider store={createStore(reducers)}><App/></Provider>,document.querySelector(\"#root\"));\n\n"],"sourceRoot":""}